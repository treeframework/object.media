///*------------------------------------*\
//    #MEDIA
//\*------------------------------------*/

// Place any image- and text-like content side-by-side, as per:
// stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code

// Predefine the variables below in order to alter and enable specific features.
$tree-media-gutter:                $tree-base-spacing-unit !default;
$tree-media-gutter--small:         halve($tree-media-gutter) !default;
$tree-media-gutter--large:         double($tree-media-gutter) !default;

$tree-enable-media--small:         false !default;
$tree-enable-media--large:         false !default;
$tree-enable-media--rev:           false !default;
$tree-enable-media--flush:         false !default;
$tree-enable-media--responsive:    false !default;
$tree-media-collapse-at:           720px !default;





.#{$tree-namespace}media,
%#{$tree-namespace}media {
    @extend %clearfix;
    display: block;
}

.#{$tree-namespace}media__img,
%#{$tree-namespace}media__img {
    float: left;
    margin-right: $tree-media-gutter;

    > img {
        display: block;
    }

}

.#{$tree-namespace}media__body,
%#{$tree-namespace}media__body {
    overflow: hidden;
    display: block;

    &,
    > :last-child {
        margin-bottom: 0;
    }

}





@if ($tree-enable-media--small == true) {

    // Small media objects.

    .#{$tree-namespace}media--small,
    %#{$tree-namespace}media--small {

        > .#{$tree-namespace}media__img,
        > %#{$tree-namespace}media__img {
            margin-right: $tree-media-gutter--small;
        }

        @if ($tree-enable-media--rev == true) {

            // Small reversed media objects.

            &.#{$tree-namespace}media--rev,
            &%#{$tree-namespace}media--rev {

                > .#{$tree-namespace}media__img,
                > %#{$tree-namespace}media__img {
                    margin-right: 0;
                    margin-left: $tree-media-gutter--small;
                }

            }

        }

    }

}

@if ($tree-enable-media--large == true) {

    // Large media objects.

    .#{$tree-namespace}media--large,
    %#{$tree-namespace}media--large {

        > .#{$tree-namespace}media__img,
        > %#{$tree-namespace}media__img {
            margin-right: $tree-media-gutter--large;
        }

        @if ($tree-enable-media--rev == true) {

            // Large reversed media objects.

            &.#{$tree-namespace}media--rev,
            &%#{$tree-namespace}media--rev {

                > .#{$tree-namespace}media__img,
                > %#{$tree-namespace}media__img {
                    margin-right: 0;
                    margin-left: $tree-media-gutter--large;
                }

            }

        }

    }

}





@if ($tree-enable-media--rev == true) {

    // Reversed image location (right instead of left). Extends ` .media`.

    .#{$tree-namespace}media--rev,
    %#{$tree-namespace}media--rev {

        > .#{$tree-namespace}media__img,
        > %#{$tree-namespace}media__img {
            float: right;
            margin-right: 0;
            margin-left: $tree-media-gutter;
        }

    }

}





@if ($tree-enable-media--flush == true) {

    // Flush media objects have no space between the image- and text-content.

    .#{$tree-namespace}media--flush,
    %#{$tree-namespace}media--flsuh {

        > .#{$tree-namespace}media__img,
        > %#{$tree-namespace}media__img {
            margin-right: 0;
            margin-left: 0;
        }

    }

}





@if ($tree-enable-media--responsive == true) {

    // Responsive media objects.
    //
    // There is a very pragmatic, simple implementation of a responsive media
    // object, which simply places the text-content beneath the image-content.
    //
    // We use a `max-width` media query because:
    //
    // a) it is the least verbose method in terms of amount of code required.
    // b) the media query object's default state is image next-to-text, so its stacked
    //    state is the exception, rather than rule.

    @media screen and (max-width: $tree-media-collapse-at) {

        .#{$tree-namespace}media--responsive,
        %#{$tree-namespace}media--responsive {

            // Rework the spacing on regular media objects.
            > .#{$tree-namespace}media__img,
            > %#{$tree-namespace}media__img {
                float: none;
                margin-right: 0;
                margin-bottom: $tree-media-gutter;
                margin-left: 0;
            }

            @if ($tree-enable-media--small == true) {

                // Small responsive media objects.
                //
                // Take a little more heavy-handed approach to reworking
                // spacing on media objects that are also small media objects
                // in their regular state.

                &.#{$tree-namespace}media--small,
                &%#{$tree-namespace}media--small {

                    > .#{$tree-namespace}media__img,
                    > %#{$tree-namespace}media__img {
                        margin-right: 0;
                        margin-left: 0;
                    }

                }

            }

            @if ($tree-enable-media--large == ture) {

                // Large responsive media objects.
                //
                // Take a little more heavy-handed approach to rework
                // spacing on media objects that are also large media objects
                // in their regular state.

                &.#{$tree-namespace}media--large,
                &%#{$tree-namespace}media--large {

                    > .#{$tree-namespace}media__img,
                    > %#{$tree-namespace}media__img {
                        margin-right: 0;
                        margin-left: 0;
                    }

                }

            }

        }

    }

}
