// =============================================================================
//
// Name:          Media
//
// Description:   Place any image and text-like content side-by-side.
//
// Block:         `o-media`
//
// Elements:      `o-media__img`
//                `o-media__body`
//
// Modifiers:     `o-media--tiny`
//                `o-media--small`
//                `o-media--large`
//                `o-media--huge`
//                `o-media--rev`
//                `o-media--flush`
//                `o-media--responsive`
//
// Markup:
//
// <div class="o-media">
//     <img class="o-media__img" src="/path/to/image.png" alt="" />
//     <div class="o-media__body">
//         <p>Text-like content goes here.<p>
//     </div>
// </div>
//
// =============================================================================





// Variables
// =============================================================================

// Predefine the variables below in order to alter and enable specific features.

$tree-media-namespace:             $tree-namespace !default;

$tree-media-gutter:                $tree-base-spacing-unit !default;
$tree-media-gutter--tiny:            quarter($tree-media-gutter) !default;
$tree-media-gutter--small:             halve($tree-media-gutter) !default;
$tree-media-gutter--large:            double($tree-media-gutter) !default;
$tree-media-gutter--huge:          quadruple($tree-media-gutter) !default;

$tree-enable-media--tiny:          false !default;
$tree-enable-media--small:         false !default;
$tree-enable-media--large:         false !default;
$tree-enable-media--huge:          false !default;
$tree-enable-media--rev:           false !default;
$tree-enable-media--flush:         false !default;
$tree-enable-media--responsive:    false !default;
$tree-media-collapse-at:           720px !default;




// =============================================================================
// Block: `o-media`
// =============================================================================

.#{$tree-media-namespace}o-media {
    @extend %u-clearfix;
    display: block;
}

    // Element: `o-media__img`
    // =========================================================================

    .#{$tree-media-namespace}o-media__img {
        float: left;
        margin-right: $tree-media-gutter;

        > img {
            display: block;
        }

    }

    // Element: `o-media__body`
    // =========================================================================

    .#{$tree-media-namespace}o-media__body {
        overflow: hidden;
        display: block;

        &,
        > :last-child {
            margin-bottom: 0;
        }

    }





@if ($tree-enable-media--tiny == true) {

    // Modifier: `o-media--tiny`
    // =========================================================================

    // Tiny media objects.

    .#{$tree-media-namespace}o-media--tiny {

        > .#{$tree-media-namespace}o-media__img {
            margin-right: $tree-media-gutter--tiny;
        }

        @if ($tree-enable-media--rev == true) {

            // Modifier: `o-media--rev`
            // =================================================================

            // Tiny reversed media objects.

            &.#{$tree-media-namespace}o-media--rev {

                > .#{$tree-media-namespace}o-media__img {
                    margin-right: 0;
                    margin-left: $tree-media-gutter--tiny;
                }

            }

        }

    }

}

@if ($tree-enable-media--small == true) {

    // Modifier: `o-media--small`
    // =========================================================================

    // Small media objects.

    .#{$tree-media-namespace}o-media--small {

        > .#{$tree-media-namespace}o-media__img {
            margin-right: $tree-media-gutter--small;
        }

        @if ($tree-enable-media--rev == true) {

            // Modifier: `o-media--rev`
            // =================================================================

            // Small reversed media objects.

            &.#{$tree-media-namespace}o-media--rev {

                > .#{$tree-media-namespace}o-media__img {
                    margin-right: 0;
                    margin-left: $tree-media-gutter--small;
                }

            }

        }

    }

}

@if ($tree-enable-media--large == true) {

    // Modifier: `o-media--large`
    // =========================================================================

    // Large media objects.

    .#{$tree-media-namespace}o-media--large {

        > .#{$tree-media-namespace}o-media__img {
            margin-right: $tree-media-gutter--large;
        }

        @if ($tree-enable-media--rev == true) {

            // Modifier: `o-media--rev`
            // =================================================================

            // Large reversed media objects.

            &.#{$tree-media-namespace}o-media--rev {

                > .#{$tree-media-namespace}o-media__img {
                    margin-right: 0;
                    margin-left: $tree-media-gutter--large;
                }

            }

        }

    }

}

@if ($tree-enable-media--huge == true) {

    // Modifier: `o-media--huge`
    // =========================================================================

    // Huge media objects.

    .#{$tree-media-namespace}o-media--huge {

        > .#{$tree-media-namespace}o-media__img {
            margin-right: $tree-media-gutter--huge;
        }

        @if ($tree-enable-media--rev == true) {

            // Modifier: `o-media--rev`
            // =================================================================

            // Huge reversed media objects.

            &.#{$tree-media-namespace}o-media--rev {

                > .#{$tree-media-namespace}o-media__img {
                    margin-right: 0;
                    margin-left: $tree-media-gutter--huge;
                }

            }

        }

    }

}





@if ($tree-enable-media--rev == true) {

    // Modifier: `o-media--rev`
    // =========================================================================

    // Reversed image location (right instead of left). Extends ` .o-media`.

    .#{$tree-media-namespace}o-media--rev {

        > .#{$tree-media-namespace}o-media__img {
            float: right;
            margin-right: 0;
            margin-left: $tree-media-gutter;
        }

    }

}





@if ($tree-enable-media--flush == true) {

    // Modifier: `o-media--flush`
    // =========================================================================

    // Flush media objects have no space between the image- and text-content.

    .#{$tree-media-namespace}o-media--flush {

        > .#{$tree-media-namespace}o-media__img {
            margin-right: 0;
            margin-left: 0;
        }

    }

}





@if ($tree-enable-media--responsive == true) {

    // Responsive media objects.
    //
    // There is a very pragmatic, simple implementation of a responsive media
    // object, which simply places the text-content beneath the image-content.
    //
    // We use a `max-width` media query because:
    //
    // a) it is the least verbose method in terms of amount of code required.
    // b) the media query object's default state is image next-to-text, so its 
    //    stacked state is the exception, rather than rule.

    @media screen and (max-width: $tree-media-collapse-at) {

        // Modifier: `o-media--responsive`
        // =====================================================================

        .#{$tree-media-namespace}o-media--responsive {

            // Rework the spacing on regular media objects.

            > .#{$tree-media-namespace}o-media__img {
                float: none;
                margin-right: 0;
                margin-bottom: $tree-media-gutter;
                margin-left: 0;
            }

            @if ($tree-enable-media--tiny == true) {

                // Modifier: `o-media--tiny`
                // =============================================================

                // Tiny responsive media objects.
                //
                // Take a little more heavy-handed approach to reworking
                // spacing on media objects that are also tiny media objects
                // in their regular state.

                &.#{$tree-media-namespace}o-media--tiny {

                    > .#{$tree-media-namespace}o-media__img {
                        margin-right: 0;
                        margin-left: 0;
                        margin-bottom: $tree-media-gutter--tiny;
                    }

                }

            }

            @if ($tree-enable-media--small == true) {

                // Modifier: `o-media--small`
                // =============================================================

                // Small responsive media objects.
                //
                // Take a little more heavy-handed approach to reworking
                // spacing on media objects that are also small media objects
                // in their regular state.

                &.#{$tree-media-namespace}o-media--small {

                    > .#{$tree-media-namespace}o-media__img {
                        margin-right: 0;
                        margin-left: 0;
                        margin-bottom: $tree-media-gutter--small;
                    }

                }

            }

            @if ($tree-enable-media--large == ture) {

                // Modifier: `o-media--large`
                // =============================================================

                // Large responsive media objects.
                //
                // Take a little more heavy-handed approach to rework
                // spacing on media objects that are also large media objects
                // in their regular state.

                &.#{$tree-media-namespace}o-media--large {

                    > .#{$tree-media-namespace}o-media__img {
                        margin-right: 0;
                        margin-left: 0;
                        margin-bottom: $tree-media-gutter--large;
                    }

                }

            }

            @if ($tree-enable-media--huge == ture) {

                // Modifier: `o-media--huge`
                // =============================================================

                // Huge responsive media objects.
                //
                // Take a little more heavy-handed approach to rework
                // spacing on media objects that are also huge media objects
                // in their regular state.

                &.#{$tree-media-namespace}o-media--huge {

                    > .#{$tree-media-namespace}o-media__img {
                        margin-right: 0;
                        margin-left: 0;
                        margin-bottom: $tree-media-gutter--huge;
                    }

                }

            }

        }

    }

}
